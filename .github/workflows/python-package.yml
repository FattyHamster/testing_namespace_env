name: Kube Manifest Update

on:
  repository_dispatch:
    types: [trigger-action]

jobs:
  update-deployment:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Set environment variables
        run: |
          echo "IMAGE_NAME=${{ github.event.client_payload.image_name }}" >> $GITHUB_ENV
          echo "VERSION=${{ github.event.client_payload.version }}" >> $GITHUB_ENV
          echo "NAMESPACE=${{ github.event.client_payload.namespace }}" >> $GITHUB_ENV


      - name: Update deployment image
        run: |
          yq e '.spec.template.spec.containers[0].image = "${{ env.IMAGE_NAME }}:${{ env.VERSION }}"' -i k8s/deployment.yaml

      - name: Install ArgoCD CLI
        run: |
          curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x /usr/local/bin/argocd

      - name: Log in to ArgoCD
        env:
          ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER_URL }}
          ARGOCD_USERNAME: ${{ secrets.ARGOCD_USERNAME }}
          ARGOCD_PASSWORD: ${{ secrets.ARGOCD_PASSWORD }}
        run: |
          argocd login ${{ secrets.ARGOCD_SERVER_URL }} --username  ${{ secrets.ARGOCD_USERNAME }} --password $${{ secrets.ARGOCD_PASSWORD }} --insecure

      - name: Create ArgoCD Project (if not exists)
        run: |
          argocd proj create "${{ env.NAMESPACE }}" || echo "Project already exists"

      - name: Deploy ArgoCD Application
        run: |
          argocd app create "${{ env.NAMESPACE }}" \
            --project "${{ env.NAMESPACE }}" \
            --repo https://github.com/FattyHamster/testing_namespace_env \
            --path k8s \
            --dest-server https://kubernetes.default.svc \
            --dest-namespace "${{ env.NAMESPACE }}" \
            || echo "Application already exists"

      - name: Sync ArgoCD Application
        run: |
          argocd app sync "${{ env.NAMESPACE }}"

      - name: Commit and push changes
        run: |
          git config --local user.email "your-email@example.com"
          git config --local user.name "GitHub Action"
          git add ./k8s/deployment.yaml
          git commit -m "Update deployment image to version ${{ env.VERSION }}"
          git push
